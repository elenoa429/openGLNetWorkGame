//==============================================================================
// タイトル     :   DirectX用マウス入力処理
// ファイル名   :   input.DX.mause.h
// 作成者       :   AT13B284 21 数藤凌哉
// 作成日       :   2016/06/03
//==============================================================================

//==============================================================================
// 更新履歴: -2016/06/03 数藤凌哉
//           ・制作開始
//==============================================================================

//==============================================================================
// インクルードガード
//==============================================================================
#pragma once

//==============================================================================
// インクルードファイル
//==============================================================================
#include "input_DX.h"
#include "d3dx9.h"

//==============================================================================
// ライブラリへのリンク設定
//==============================================================================
#pragma comment( lib , "d3d9.lib" )			// 描画処理に必要
#pragma comment( lib , "d3dx9.lib" )		// 上記の拡張ライブラリ

//==============================================================================
// マクロ定義
//==============================================================================
enum DIM_TYPE
{										/* ===マウスキー種類用列挙型=== */
	DIM_LEFT = 0,							// マウス左キー
	DIM_RIGHT,								// マウス右キー
	DIM_CENTER,								// マウス中央キー( ホイールクリック )
	DIM_SUB_0,								// 追加されたキー部分
	DIM_SUB_1,								// 追加されたキー部分
	DIM_SUB_2,								// 追加されたキー部分
	DIM_SUB_3,								// 追加されたキー部分
	DIM_SUB_4,								// 追加されたキー部分
	DIM_KEY_MAX,							// マウスキー総数
};

//==============================================================================
// 構造体宣言
//==============================================================================

//==============================================================================
// 前方宣言
//==============================================================================
class CInputDX;

//==============================================================================
// クラス宣言
//==============================================================================
class CInputDXMause : public CInputDX
{
	//-------------------------------------
	// [ メンバ関数 ]
	//-------------------------------------
public:
	CInputDXMause();											// デフォルトコンストラクタ
	~CInputDXMause();											// デストラクタ

	bool Init( HINSTANCE hInstance , HWND hWnd );				// 初期化処理
	void Uninit( void );										// 終了処理
	void Update( void );										// 更新処理

	bool GetPress( int nKey );									// Press判定取得処理
	bool GetTrigger( int nKey );								// Trigger判定取得処理
	bool GetRelease( int nKey );								// Release判定取得処理
	bool GetRepeat( int nKey );									// Repeat判定取得処理

	D3DXVECTOR3 GetPosToScreen( void ){ return m_screenPos; }	// マウススクリーン座標取得
	D3DXVECTOR3 GetVelocity( void ){ return m_velocity; }		// マウス移動速度取得

	D3DXVECTOR3 GetPosToWorld( D3DXMATRIX mtxProj , D3DXMATRIX mtxView , float fZ );	// マウスワールド座標取得

	//-------------------------------------
	// [ メンバ変数 ]
	//-------------------------------------
protected:
	LPDIRECTINPUTDEVICE8 m_pDevInput;							// 入力デバイスへのポインタ
	BYTE m_aKeyState[ DIM_KEY_MAX ];							// 入力情報ワーク( Press用 )
	BYTE m_aKeyStateTrigger[ DIM_KEY_MAX ];						// 入力情報ワーク( Trigger用 )
	BYTE m_aKeyStateRelease[ DIM_KEY_MAX ];						// 入力情報ワーク( Release用 )
	BYTE m_aKeyStateRepeat[ DIM_KEY_MAX ];						// 入力情報ワーク( Repeat用 )
	int m_aKeyStateRepeatCount[ DIM_KEY_MAX ];					// キーリピートカウンタ
	int m_repeatDelayTime;										// リピート処理を行うまでに必要なキー押下時間

	D3DXVECTOR3 m_screenPos;									// スクリーン上のマウス座標
	D3DXVECTOR3 m_velocity;										// 今回フレームの動かした速度

	HWND m_hwnd;												// 紐付いているウィンドウハンドル
};

//==============================================================================
// プロトタイプ宣言
//==============================================================================

