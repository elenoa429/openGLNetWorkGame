//==============================================================================
// タイトル     :   32Bit浮動小数点の色用クラス
// ファイル名   :   commonUtility.color32.h
// 作成者       :   AT13B284 21 数藤凌哉
// 作成日       :   2016/04/22
//==============================================================================

//==============================================================================
// 更新履歴: -2016/04/22 数藤凌哉
//           ・制作開始
//==============================================================================

//==============================================================================
// インクルードガード
//==============================================================================
#pragma once

//==============================================================================
// インクルードファイル
//==============================================================================
#include <Windows.h>
#include "commonUtility_color8.h"

//==============================================================================
// マクロ定義
//==============================================================================

//==============================================================================
// 構造体宣言
//==============================================================================

//==============================================================================
// クラス宣言
//==============================================================================
class COLOR_F32
{
	//---------------------------------------------
	// [ メンバ関数 ]
	//---------------------------------------------
public:
	COLOR_F32();
	COLOR_F32( DWORD abgr );
	COLOR_F32( float r , float g , float b , float a );
	~COLOR_F32();

	operator DWORD() const;
	operator COLOR_U8() const;

	//---------------------------------------------
	// [ メンバ変数 ]
	//---------------------------------------------
public:
	union
	{
		struct
		{
			float r;			// 赤
			float g;			// 緑
			float b;			// 青
			float a;			// アルファ値
		};

		float col[ 4 ];			// RGBA
	};
};

//==============================================================================
// プロトタイプ宣言
//==============================================================================
