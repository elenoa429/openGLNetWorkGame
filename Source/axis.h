//==============================================================================
// タイトル     :   軸描画用クラス
// ファイル名   :   axis.h
// 作成者       :   AT13B284 21 数藤凌哉
// 作成日       :   2016/07/08
//==============================================================================

//==============================================================================
// 更新履歴: -2016/07/08 数藤凌哉
//           ・制作開始
//==============================================================================

//==============================================================================
// インクルードガード
//==============================================================================
#pragma once

//==============================================================================
// インクルードファイル
//==============================================================================
#include "main.h"
#include "scene.h"

//==============================================================================
// マクロ定義
//==============================================================================

//==============================================================================
// 構造体宣言
//==============================================================================

//==============================================================================
// 前方宣言
//==============================================================================

//==============================================================================
// クラス宣言
//==============================================================================
class CAxis : public CScene
{
	//---------------------------------------------
	// [ メンバ関数 ]
	//---------------------------------------------
public:
	// コンストラクタ
	CAxis();

	// デストラクタ
	~CAxis();

	// 生成処理
	static CAxis* Create( VECTOR3 from , VECTOR3 to , float vold = 1.0f , COLOR_F32 col = COLOR_F32( 1.0f , 1.0f , 1.0f , 1.0f ) );

	// 初期化処理
	virtual bool Init( VECTOR3 from , VECTOR3 to , float vold , COLOR_F32 col );

	// 終了処理
	virtual void Uninit( void );

	// 更新処理
	virtual void Update( void );

	// 描画処理
	virtual void Draw( void );

	// 色関連
	virtual COLOR_F32 GetCol( void ){ return m_col; }
	virtual void SetCol( COLOR_F32 col ){ m_col = col; }

	// 線の太さ設定
	void SetVold( float vold ){ m_vold = vold; }

	// 描画設定
	void SetDrawEnable( bool enable ){ m_isDrawEnable = enable; }

	//---------------------------------------------
	// [ メンバ変数 ]
	//---------------------------------------------
protected:
	VECTOR3   m_from;			// 開始位置
	VECTOR3   m_to;				// 終了位置

	float     m_vold;			// 太さ

	COLOR_F32 m_col;			// 色

	MATRIX    m_mtxWorld;		// ワールドマトリクス

	bool      m_isDrawEnable;	// 描画フラグ
};

//==============================================================================
// プロトタイプ宣言
//==============================================================================
