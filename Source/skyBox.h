//==============================================================================
// タイトル     :   スカイボックスクラス
// ファイル名   :   skyBox.h
// 作成者       :   AT13B284 21 数藤凌哉
// 作成日       :   2016/05/16
//==============================================================================

//==============================================================================
// 更新履歴: -2016/05/16 数藤凌哉
//           ・制作開始
//==============================================================================

//==============================================================================
// インクルードガード
//==============================================================================
#pragma once

//==============================================================================
// インクルードファイル
//==============================================================================
#include "main.h"
#include "sceneGL3D.h"

//==============================================================================
// マクロ定義
//==============================================================================

//==============================================================================
// 構造体宣言
//==============================================================================

//==============================================================================
// クラス宣言
//==============================================================================
class CSkyBox : public CSceneGL3D
{
	/* ===メンバ関数=== */
public:
	CSkyBox();								// デフォルトコンストラクタ
	~CSkyBox();								// デストラクタ

	static CSkyBox* Create( char* texPath );

	virtual bool Init( char* texPath );		// 初期化処理
	virtual void Uninit( void );			// 終了処理
	virtual void Update( void );			// 更新処理
	virtual void Draw( void );				// 描画処理

private:
	float texUPos( int uPos );				// U座標算出処理
	float texVPos( int vPos );				// V座標算出処理

	/* ===メンバ変数=== */
protected:
	VECTOR2 m_texUnitSize;					// テクスチャ1区画の大きさ

	int m_DivTexU;							// テクスチャU座標の分割数
	int m_DivTexV;							// テクスチャV座標の分割数
};

//==============================================================================
// プロトタイプ宣言
//==============================================================================

