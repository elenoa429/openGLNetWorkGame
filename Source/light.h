//==============================================================================
// タイトル     :   ライトの基底クラス
// ファイル名   :   light.h
// 作成者       :   AT13B284 21 数藤凌哉
// 作成日       :   2016/05/23
//==============================================================================

//==============================================================================
// 更新履歴: -2016/05/23 数藤凌哉
//           ・制作開始
//==============================================================================

//==============================================================================
// インクルードガード
//==============================================================================
#pragma once

//==============================================================================
// インクルードファイル
//==============================================================================
#include "main.h"

//==============================================================================
// マクロ定義
//==============================================================================
enum LIGHT_ID
{													/* ==ライトID( 最大8つのライトをこれで指定・操作 )== */
	LIGHT_UNKWON = -1,									// 不定形( エラーチェック用 )
	LIGHT0 = 0 ,										// ID:0
	LIGHT1,												// ID:1
	LIGHT2,												// ID:2
	LIGHT3,												// ID:3
	LIGHT4,												// ID:4
	LIGHT5,												// ID:5
	LIGHT6,												// ID:6
	LIGHT7,												// ID:7
	LIGHT_MAX,											// 総数
};

enum LIGHT_TYPE
{													/* ==ライトの種類の列挙== */
	LIGHT_TYPE_UNKWON = -1,								// 不定形( エラーチェック用 )
	LIGHT_TYPE_POINT = 0,								// ポイントライト
	LIGHT_TYPE_SPOT,									// スポットライト
	LIGHT_TYPE_DIRECTIONAL,								// ディレクショナルライト
	LIGHT_TYPE_MAX,										// 総数
};

//==============================================================================
// 構造体宣言
//==============================================================================

//==============================================================================
// クラス宣言
//==============================================================================
class CLight
{
	//---------------------------------------------
	// [ メンバ関数 ]
	//---------------------------------------------
public:
	CLight();												// コンストラクタ
	~CLight();												// デストラクタ

	static void UpdateAll( void );							// 登録されたインスタンス全ての更新処理
	static void ReleaseAll( void );							// 登録されたインスタンス全ての解放処理

	static CLight* GetLight( LIGHT_ID id ){					// ライトインスタンス取得処理
		return m_apLight[ id ];
	}

	static void SetLightAll( void );						// ライト設定

	static void SetLightAllEnable( bool enable ){ m_allEnable = enable; }

	virtual void Enable( void ){ m_enable = true; }			// 有効化
	virtual void Disable( void ){ m_enable = false; }		// 無効化

protected:
	virtual bool Init( LIGHT_ID id , LIGHT_TYPE type );		// 初期化処理( 派生先で必ず呼び出すこと！ )
	virtual void Uninit( void ) = 0;						// 終了処理
	virtual void Update( void ) = 0;						// 更新処理
	virtual void Set( bool enable ) = 0;					// ライト設定

	//---------------------------------------------
	// [ メンバ変数 ]
	//---------------------------------------------
protected:
	static CLight* m_apLight[ LIGHT_MAX ];					// ライトのインスタンス用ワーク
	static bool    m_allEnable;								// ライト自体の有効化フラグ

	LIGHT_ID   m_id;										// ライトID
	LIGHT_TYPE m_type;										// ライトの種類識別子
	bool       m_enable;									// それぞれのライトの有効判定
};

//==============================================================================
// プロトタイプ宣言
//==============================================================================
