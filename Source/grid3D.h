//==============================================================================
// タイトル     :   グリッド線描画クラス
// ファイル名   :   grid3D.h
// 作成者       :   AT13B284 21 数藤凌哉
// 作成日       :   2016/07/08
//==============================================================================

//==============================================================================
// 更新履歴: -2016/07/08 数藤凌哉
//           ・制作開始
//==============================================================================

//==============================================================================
// インクルードガード
//==============================================================================
#pragma once

//==============================================================================
// インクルードファイル
//==============================================================================
#include "sceneGL3D.h"

//==============================================================================
// マクロ定義
//==============================================================================

//==============================================================================
// 構造体宣言
//==============================================================================

//==============================================================================
// 前方宣言
//==============================================================================

//==============================================================================
// クラス宣言
//==============================================================================
class CGrid3D : public CSceneGL3D
{
	//---------------------------------------------
	// [ メンバ関数 ]
	//---------------------------------------------
public:
	// コンストラクタ
	CGrid3D();

	// デストラクタ
	~CGrid3D();

	// 生成処理
	static CGrid3D* Create( int w = 10 , int h = 10 , float mW = 100.0f , float mH = 100.0f );

	// 初期化処理
	virtual bool Init( int w , int h , float mW , float mH );

	// 終了処理
	virtual void Uninit( void );

	// 更新処理
	virtual void Update( void );

	// 描画処理
	virtual void Draw( void );

	//---------------------------------------------
	// [ メンバ変数 ]
	//---------------------------------------------
protected:
	int m_numW;			// 横個数
	int m_numH;			// 縦個数

	float m_marginW;	// 横線間隔
	float m_marginH;	// 縦線間隔

};

//==============================================================================
// プロトタイプ宣言
//==============================================================================
