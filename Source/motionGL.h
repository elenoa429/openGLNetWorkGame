//==============================================================================
// タイトル     :   OpenGL用モーションクラス
// ファイル名   :   motionGL.h
// 作成者       :   AT13B284 21 数藤凌哉
// 作成日       :   2016/09/16
//==============================================================================

//==============================================================================
// 更新履歴: -2016/09/16 数藤凌哉
//           ・制作開始
//==============================================================================

//==============================================================================
// インクルードガード
//==============================================================================
#pragma once

//==============================================================================
// インクルードファイル
//==============================================================================
#include "parentModelManagerGL.h"

//==============================================================================
// ライブラリへのリンク設定
//==============================================================================

//==============================================================================
// マクロ定義
//==============================================================================

//==============================================================================
// 構造体宣言
//==============================================================================

//==============================================================================
// クラス宣言
//==============================================================================
class CMotionGL
{
	//---------------------------------------------
	// [ 構造体 ]
	//---------------------------------------------
public:
	struct KEY
	{									/* ==キーデータ== */
		float posX;							// X軸位置
		float posY;							// Y軸位置
		float posZ;							// Z軸位置
		float rotX;							// X軸角度
		float rotY;							// Y軸角度
		float rotZ;							// Z軸角度
	};

	struct KEY_INFO
	{									/* ==キー情報データ== */
		int flame;							// フレーム数
		KEY keyData[ 3 ];					// キーデータへのポインタ( 関節数で動的確保 )
	};

	struct MOTION
	{									/* ==モーションデータ== */
		KEY_INFO* pKeyInfoData;				// キー情報データへのポインタ
		int joinyNum;						// 関節数
		int keyNum;							// キー個数
	};

	struct MOTION_INFO
	{									/* ==モーション情報データ== */
		MOTION* pMotionData;				// モーションデータへのポインタ
		int motionNum;						// モーション個数
	};

	//---------------------------------------------
	// [ メンバ関数 ]
	//---------------------------------------------
public:
	CMotionGL();
	~CMotionGL();

	static CMotionGL* Create( const char* pMotionFileName );

	void Release( void );
	bool Init( const char* pMotionFileName );
	void Uninit( void );
	void Update( void );

	bool SetMotionData( CParentModelManagerGL* pSetModel );

private:
	bool LoadMotion( const char* pMotionFileName , int motionIdx );

	//---------------------------------------------
	// [ メンバ変数 ]
	//---------------------------------------------
private:
	MOTION_INFO m_motionInfo;			// モーション情報

	int m_motionIdx;					// モーションインデックス
	int m_flameCnt;						// フレームカウンタ
};

//==============================================================================
// プロトタイプ宣言
//==============================================================================
