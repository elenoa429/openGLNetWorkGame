//==============================================================================
// タイトル     :   OpenGL用マテリアル用バッファークラス
// ファイル名   :   materialBufferGL.h
// 作成者       :   AT13B284 21 数藤凌哉
// 作成日       :   2016/06/11
//==============================================================================

//==============================================================================
// 更新履歴: -2016/06/11 数藤凌哉
//           ・制作開始
//==============================================================================

//==============================================================================
// インクルードガード
//==============================================================================
#pragma once

//==============================================================================
// インクルードファイル
//==============================================================================
#include "materialBuffer.h"

//==============================================================================
// マクロ定義
//==============================================================================

//==============================================================================
// 構造体宣言
//==============================================================================

//==============================================================================
// クラス宣言
//==============================================================================
class CMaterialBufferGL : public CMaterialBuffer
{
	//---------------------------------------------
	// [ メンバ関数 ]
	//---------------------------------------------
public:
	// コンストラクタ
	CMaterialBufferGL()
	{
		m_pData = NULL;
		m_dataSize = 0;
	}

	// デストラクタ
	~CMaterialBufferGL(){}

	// 解放処理
	void Release( void )
	{
		// インデックスデータの解放
		if( m_pData != NULL )
		{
			delete[] m_pData;
			m_pData = NULL;
		}

		// 自身の解放
		delete this;
	}

	// プライベートデータ取得
	bool GetPrivateData( void** ppData , DWORD* pSizeOfData )
	{
		// 頂点データ取得
		if( m_pData == NULL )
		{
			return false;		// データ未設定のため処理失敗
		}

		*ppData = m_pData;

		// データサイズ取得
		if( pSizeOfData != NULL )
		{
			*pSizeOfData = m_dataSize;
		}

		return true;			// 処理成功
	}

	// プライベートデータ設定
	bool SetPrivateData( void* pData , DWORD sizeOfData )
	{
		// エラーチェック
		if( pData == NULL )
		{
			return false;								// データ格納先ポインタがNULLのため処理失敗
		}

		// データ設定
		m_pData = pData;
		m_dataSize = sizeOfData;

		return true;	// 処理成功
	}

	//---------------------------------------------
	// [ メンバ変数 ]
	//---------------------------------------------
private:
	void* m_pData;			// データへのポインタ
	DWORD m_dataSize;		// データサイズ
};

typedef class CMaterialBufferGL* LPMaterialBufferGL;

//==============================================================================
// プロトタイプ宣言
//==============================================================================
