//==============================================================================
// タイトル     :   入力処理
// ファイル名   :   input.h
// 作成者       :   AT13B284 21 数藤凌哉
// 作成日       :   2016/04/25
//==============================================================================

//==============================================================================
// 更新履歴: -2016/04/25 数藤凌哉
//           ・制作開始
//==============================================================================

//==============================================================================
// インクルードガード
//==============================================================================
#ifndef _INPUT_H_
#define _INPUT_H_

//==============================================================================
// インクルードファイル
//==============================================================================
#include <Windows.h>

//==============================================================================
// マクロ定義
//==============================================================================
typedef enum
{									/* ===入力系統の種類=== */
	INPUT_TYPE_NONE = -1,				// 初期状態
	INPUT_TYPE_GL_KEYBOARD = 0,			// キーボード( GL用 )

	INPUT_TYPE_DX_KEYBOARD,				// キーボード( DirectX用 )
	INPUT_TYPE_DX_MOUSE,				// マウス( DirectX用 )

	INPUT_TYPE_EDITOR_MOUSE ,			// エディター用マウス

	INPUT_TYPE_MAX,						// 総数

} INPUT_TYPE;

//==============================================================================
// 構造体宣言
//==============================================================================

//==============================================================================
// クラス宣言
//==============================================================================
class CInput
{
	/* ===メンバ関数=== */
public:
	CInput();																		// コンストラクタ
	~CInput();																		// デストラクタ

	virtual bool Init( HINSTANCE hInstance , HWND hWnd ) = 0;						// 初期化処理
	virtual void Uninit( void ) = 0;												// 終了処理
	virtual void Update( void ) = 0;												// 更新処理

	virtual bool GetPress( int nKey ) = 0;											// Press判定取得処理
	virtual bool GetTrigger( int nKey ) = 0;										// Trigger判定取得処理
	virtual bool GetRelease( int nKey ) = 0;										// Release判定取得処理
	virtual bool GetRepeat( int nKey ) = 0;											// Repeat判定取得処理

	static CInput* Create( INPUT_TYPE type , HINSTANCE hInstance , HWND hWnd );		// 生成処理
	static CInput* GetInput( INPUT_TYPE type );										// 登録されたインスタンスの取得
	static void UpdateAll( void );													// 登録されたインスタンス全ての更新処理
	static void ReleaseALL( void );													// 登録されたインスタンス全ての解放処理

	/* ===メンバ変数=== */
private:
	static CInput* m_apInput[ INPUT_TYPE_MAX ];										// インスタンス用のワーク
	static int m_numInstance;														// 生成したインスタンス数

	INPUT_TYPE m_type;																// 登録した入力系統の種類
};

//==============================================================================
// 各入力処理のインクルード
//==============================================================================
#include "input_DX.h"

#endif