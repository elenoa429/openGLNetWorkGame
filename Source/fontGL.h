//==============================================================================
// タイトル     :   OpenGL用文字列関係処理
// ファイル名   :   fontGL.h
// 作成者       :   AT13B284 21 数藤凌哉
// 作成日       :   2016/05/18
//==============================================================================

//==============================================================================
// 更新履歴: -2016/05/18 数藤凌哉
//           ・制作開始
//==============================================================================

//==============================================================================
// インクルードガード
//==============================================================================
#pragma once

//==============================================================================
// インクルードファイル
//==============================================================================
#include <Windows.h>
#include "font.h"
#include "commonUtility.h"

//==============================================================================
// マクロ定義
//==============================================================================

//==============================================================================
// 構造体宣言
//==============================================================================

//==============================================================================
// クラス宣言
//==============================================================================
class CFontGL : public CFont
{
	/* ===メンバ関数=== */
public:
	CFontGL();													// デフォルトコンストラクタ
	~CFontGL();													// デストラクタ

	bool Init( int fontSize , char* fontName ,					// 初期化処理
		COLOR_F32 col = COLOR_F32( 1.0f , 1.0f , 1.0f , 1.0f ) );

	void Uninit( void );										// 終了処理
	void Update( void );										// 更新処理
	void Draw( int x = 0 , int y = 0 );							// 描画処理

	/* ===メンバ変数=== */
private:
	HFONT m_hFont;												// フォントハンドル
	HFONT m_hFontOrigin;										// オリジナルのフォント

	HDC   m_hdc;												// デバイスコンテキスト

	int   m_fontHeight;											// フォントの高さ

	COLOR_F32 m_col;											// 色
};

//==============================================================================
// プロトタイプ宣言
//==============================================================================
