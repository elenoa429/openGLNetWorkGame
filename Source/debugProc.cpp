//==============================================================================
// タイトル     :   デバッグプロシージャ
// ファイル名   :   debugProc.cpp
// 作成者       :   AT13B284 21 数藤凌哉
// 作成日       :   2016/05/20
//==============================================================================

//==============================================================================
// 更新履歴: -2016/05/20 数藤凌哉
//           ・制作開始
//==============================================================================

//==============================================================================
// WANING防止
//==============================================================================
#define _CRT_SECURE_NO_WARNINGS

//==============================================================================
// インクルードファイル
//==============================================================================
#include "debugProc.h"
#include "fontGL.h"
#include <stdio.h>

//==============================================================================
// 列挙型宣言
//==============================================================================

//==============================================================================
// マクロ定義
//==============================================================================

//==============================================================================
// 構造体宣言
//==============================================================================

//==============================================================================
// プロトタイプ宣言
//==============================================================================

//==============================================================================
// グローバル宣言
//==============================================================================

//==============================================================================
// 静的変数
//==============================================================================
CDebugProc* CDebugProc::pDebugProc = NULL;

//==============================================================================
// 関数名 : CDebugProc()
// 引数   : void
// 戻り値 : void
// 説明   : デフォルトコンストラクタ
//==============================================================================
CDebugProc::CDebugProc()
{
	m_pFont = NULL;
}

//==============================================================================
// 関数名 : ~CDebugProc()
// 引数   : void
// 戻り値 : void
// 説明   : デストラクタ
//==============================================================================
CDebugProc::~CDebugProc()
{
}

//==============================================================================
// 関数名 : void Create( void )
// 引数   : void
// 戻り値 : void
// 説明   : 生成処理
//==============================================================================
void CDebugProc::Create( void )
{
	if( pDebugProc == NULL )
	{
		pDebugProc = new CDebugProc;

		if ( pDebugProc->Init() == false )
		{
			CDebugProc::Release();
		}
	}
}

//==============================================================================
// 関数名 : void Release( void )
// 引数   : void
// 戻り値 : void
// 説明   : 解放処理
//==============================================================================
void CDebugProc::Release( void )
{
	if( pDebugProc != NULL )
	{
		pDebugProc->Uninit();
		delete pDebugProc;
		pDebugProc = NULL;
	}
}

//==============================================================================
// 関数名 : bool Init( void )
// 引数   : void
// 戻り値 : void
// 説明   : 初期化処理
//==============================================================================
bool CDebugProc::Init( void )
{
	CFontGL* pNewFontGL = new CFontGL;

	if( pNewFontGL->Init( 16 , "ＭＳゴシック" ) == false )
	{
		pNewFontGL->Uninit();
		delete pNewFontGL;
		pNewFontGL = NULL;

		return false;
	}

	m_pFont = pNewFontGL;

	return true;
}

//==============================================================================
// 関数名 : void Uninit( void )
// 引数   : void
// 戻り値 : void
// 説明   : 終了処理
//==============================================================================
void CDebugProc::Uninit( void )
{
	if ( m_pFont != NULL )
	{
		CFontGL* pDeleteFontGL = ( CFontGL* )m_pFont;

		pDeleteFontGL->Uninit();
		delete pDeleteFontGL;
		pDeleteFontGL = NULL;

		m_pFont = NULL;
	}
}

//==============================================================================
// 関数名 : void Update( void )
// 引数   : void
// 戻り値 : void
// 説明   : 更新処理
//==============================================================================
void CDebugProc::Update( void )
{
	m_pFont->Update();
}

//==============================================================================
// 関数名 : void Draw( void )
// 引数   : void
// 戻り値 : void
// 説明   : 描画処理
//==============================================================================
void CDebugProc::Draw( void )
{
	m_pFont->Draw();
	m_pFont->ResetBuff();
}

//==============================================================================
// 関数名 : bool PrintDebugProc( char *fmt , ... )
// 引数   : void
// 戻り値 : void
// 説明   : 出力バッファーへの書き込み処理
//==============================================================================
bool CDebugProc::PrintDebugProc( char *fmt , ... )
{
	/* ===可変引数から文字列生成=== */
	va_list ap;															// 可変引数用のポインタ
	char aSourceBuff[ OUT_BUFF_SIZE_HEIGHT * OUT_BUFF_SIZE_WIDTH ];		// 取得情報のバッファー
	bool bResult = false;												// 処理結果

	va_start( ap , fmt );												// 可変引数を用いる設定
	vsprintf( &aSourceBuff[ 0 ] , fmt , ap );							// 取得した情報を格納
	va_end( ap );														// 可変引数設定終了

	/* ===生成した文字列の連結=== */
	bResult = m_pFont->Cat( aSourceBuff );

	return bResult;														// 処理結果の返却
}

//==============================================================================
// 関数名 : CDebugProc( const CDebugProc& )
// 引数   : void
// 戻り値 : void
// 説明   : コピーコンストラクタ
//==============================================================================
CDebugProc::CDebugProc( const CDebugProc& )
{
}

//==============================================================================
// 関数名 : CDebugProc& operator=( const CDebugProc& )
// 引数   : void
// 戻り値 : void
// 説明   : オペレーター
//==============================================================================
void CDebugProc::operator=( const CDebugProc& )
{
}