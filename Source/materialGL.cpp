//==============================================================================
// タイトル     :   OpenGL用マテリアルクラス
// ファイル名   :   materialGL.h
// 作成者       :   AT13B284 21 数藤凌哉
// 作成日       :   2016/06/03
//==============================================================================

//==============================================================================
// 更新履歴: -2016/06/03 数藤凌哉
//           ・制作開始
//==============================================================================

//==============================================================================
// インクルードファイル
//==============================================================================
#include "materialGL.h"
#include <gl/gl.h>
#include <gl/glu.h>

//==============================================================================
// ライブラリへのリンク設定
//==============================================================================
#pragma comment( lib , "opengl32.lib" )		// OpenGL用
#pragma comment( lib , "glu32.lib" )		// OpenGL用

//==============================================================================
// 列挙型宣言
//==============================================================================

//==============================================================================
// マクロ定義
//==============================================================================

//==============================================================================
// 構造体宣言
//==============================================================================

//==============================================================================
// プロトタイプ宣言
//==============================================================================

//==============================================================================
// グローバル宣言
//==============================================================================

//==============================================================================
// 静的変数
//==============================================================================

//==============================================================================
// 関数名 : CMaterialGL()
// 引数   : void
// 戻り値 : void
// 説明   : デフォルトコンストラクタ
//==============================================================================
CMaterialGL::CMaterialGL()
{
	memset( m_name , 0 , sizeof( m_name ) );

	m_ambient = COLOR_F32( 0.2f , 0.2f , 0.2f , 1.0f );
	m_diffuse = COLOR_F32( 0.8f , 0.8f , 0.8f , 1.0f );
	m_specular = COLOR_F32( 0.0f , 0.0f , 0.0f , 1.0f );
	m_emission = COLOR_F32( 0.0f , 0.0f , 0.0f , 1.0f );

	m_shininess = 0.0f;

	m_isShininessEnable = false;

	m_pTextute = NULL;

	memset( m_texPath , 0 , sizeof( m_texPath ) );
}

//==============================================================================
// 関数名 : ~CMaterialGL()
// 引数   : void
// 戻り値 : void
// 説明   : デストラクタ
//==============================================================================
CMaterialGL::~CMaterialGL()
{

}

//==============================================================================
// 関数名 : CMaterialGL* Create( char* mtlPath )
// 引数   : char* mtlPath  : .mtlファイルへのファイルパス
// 戻り値 : CMaterialGL*型
// 説明   : 生成処理
//==============================================================================
CMaterialGL* CMaterialGL::Create( char* mtlPath )
{
	CMaterialGL* newInstance = new CMaterialGL;

	if( mtlPath != NULL )
	{
		if( newInstance->LoadFromMTL( mtlPath ) == false )
		{
			delete newInstance;
			newInstance = NULL;
		}
	}

	return newInstance;
}

//==============================================================================
// 関数名 : void Release( void )
// 引数   : void
// 戻り値 : void
// 説明   : 解放処理
//==============================================================================
void CMaterialGL::Release( void )
{
	delete this;
}

//==============================================================================
// 関数名 : void Set( void )
// 引数   : void
// 戻り値 : void
// 説明   : マテリアル設定処理
//==============================================================================
void CMaterialGL::Set( void )
{
	glMaterialfv( GL_FRONT_AND_BACK , GL_AMBIENT , m_ambient.col );			// 環境光
	glMaterialfv( GL_FRONT_AND_BACK , GL_DIFFUSE , m_diffuse.col );			// 拡散反射光
	glMaterialfv( GL_FRONT_AND_BACK , GL_SPECULAR , m_specular.col );		// 鏡面反射光
	glMaterialf( GL_FRONT_AND_BACK , GL_SHININESS , m_shininess );			// 鏡面反射光指数
}

//==============================================================================
// 関数名 : void LoadFromMTL( char* path )
// 引数   : void
// 戻り値 : bool型 : 処理結果
// 説明   : .mtlファイルからのマテリアル読み込み処理
//==============================================================================
bool CMaterialGL::LoadFromMTL( char* path )
{
	return false;
}





