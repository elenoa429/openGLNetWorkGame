//==============================================================================
// タイトル     :   テクスチャ用クラス
// ファイル名   :   texture.h
// 作成者       :   AT13B284 21 数藤凌哉
// 作成日       :   2016/05/02
//==============================================================================

//==============================================================================
// 更新履歴: -2016/05/02 数藤凌哉
//           ・制作開始
//==============================================================================

//==============================================================================
// インクルードガード
//==============================================================================
#pragma once

//==============================================================================
// インクルードファイル
//==============================================================================
#include "texture.h"
#include "main.h"
#include <gl/gl.h>
#include <gl/glu.h>

//==============================================================================
// ライブラリへのリンク設定
//==============================================================================
#pragma comment( lib , "opengl32.lib" )		// OpenGL用
#pragma comment( lib , "glu32.lib" )		// OpenGL用

//==============================================================================
// マクロ定義
//==============================================================================

//==============================================================================
// 構造体宣言
//==============================================================================

//==============================================================================
// クラス宣言
//==============================================================================
class CTextureGL : public CTexture
{
	/* ===メンバ関数=== */
public:
	CTextureGL();
	~CTextureGL();

	static CTextureGL* Create( int width , int height , GLuint texType , GLubyte* bits );	// 生成処理( 基本的にはローダー内で利用 )

	void Init( int width , int height , GLuint texType , GLubyte* bits );					// 初期化処理
	void Release( void );																	// 解放処理
	void Set( void );																		// 設定処理

	/* ===メンバ変数=== */
private:
	GLuint m_texName;				// テクスチャ識別子
	GLuint m_texType;				// テクスチャタイプ
};

//==============================================================================
// プロトタイプ宣言
//==============================================================================
