//==============================================================================
// タイトル     :   OpenGL用1人称視点カメラ処理
// ファイル名   :   fpsCameraGL.h
// 作成者       :   AT13B284 21 数藤凌哉
// 作成日       :   2016/07/10
//==============================================================================

//==============================================================================
// 更新履歴: -2016/07/10 数藤凌哉
//           ・制作開始
//==============================================================================

//==============================================================================
// インクルードガード
//==============================================================================
#pragma once

//==============================================================================
// インクルードファイル
//==============================================================================
#include "cameraGL.h"
#include "commonUtility.h"

//==============================================================================
// マクロ定義
//==============================================================================

//==============================================================================
// 構造体宣言
//==============================================================================

//==============================================================================
// クラス宣言
//==============================================================================
class CFpsCameraGL : public CCameraGL
{
	//---------------------------------------------
	// [ メンバ関数 ]
	//---------------------------------------------
public:
	// コンストラクタ
	CFpsCameraGL();

	// デストラクタ
	~CFpsCameraGL();

	// 初期化処理
	bool Init( VECTOR3 posV = VECTOR3( 0.0f , 1.0f , 1.0f ) , VECTOR3 posR = VECTOR3( 0.0f , 0.0f , 0.0f ) );

	// 終了処理
	void Uninit( void );

	// 更新処理
	void Update( void );

private:
	// 水平方向取得
	float GetHAngle( VECTOR3* vPosV , VECTOR3* vPosR );

	// 垂直方向取得
	float GetVAngle( VECTOR3* vPosV , VECTOR3* vPosR );

	// マウスの加速度から、角度移動量を生成
	VECTOR2 MoveRad( VECTOR3 vel );

	// マウスの加速度から、平行移動量を算出
	VECTOR3 MoveTranslate( VECTOR3 vel );

	//---------------------------------------------
	// [ メンバ変数 ]
	//---------------------------------------------
protected:
	float m_angleH;		// 水平方向
	float m_angleV;		// 垂直方向
};

//==============================================================================
// プロトタイプ宣言
//==============================================================================
