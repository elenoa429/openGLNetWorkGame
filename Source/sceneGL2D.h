//==============================================================================
// タイトル     :   OpenGL用2D描画用クラス
// ファイル名   :   sceneGL2D.h
// 作成者       :   AT13B284 21 数藤凌哉
// 作成日       :   2016/04/22
//==============================================================================

//==============================================================================
// 更新履歴: -2016/04/22 数藤凌哉
//           ・制作開始
//==============================================================================

//==============================================================================
// インクルードガード
//==============================================================================
#pragma once

//==============================================================================
// インクルードファイル
//==============================================================================
#include "main.h"
#include "sceneGL.h"

//==============================================================================
// マクロ定義
//==============================================================================

//==============================================================================
// 構造体宣言
//==============================================================================

//==============================================================================
// クラス宣言
//==============================================================================
class CSceneGL2D : public CSceneGL
{
	//---------------------------------------------
	// [ メンバ関数 ]
	//---------------------------------------------
public:
	// コンストラクタ
	CSceneGL2D();

	// デストラクタ
	~CSceneGL2D();

	// 生成処理
	static CSceneGL2D* Create( char* texPath = NULL );

	// 初期化処理
	virtual bool Init( char* texPath );

	// 終了処理
	virtual void Uninit( void );

	// 更新処理
	virtual void Update( void );

	// 描画処理
	virtual void Draw( void );

	// 位置関連
	virtual VECTOR3 GetPos( void ){ return m_pos; }
	virtual void SetPos( VECTOR3 pos ){ m_pos = pos; }

	// サイズ関連
	virtual VECTOR3 GetSize( void ){ return m_size; }
	virtual void SetSize( VECTOR3 size ){ m_size = size; }

	// 角度関連
	virtual VECTOR3 GetRot( void ){ return m_rot; }
	virtual void SetRot( VECTOR3 rot ){ m_rot = rot; }

	// 色関連
	virtual COLOR_F32 GetCol( void ){ return m_col; }
	virtual void SetCol( COLOR_F32 col ){ m_col = col; }

	//---------------------------------------------
	// [ メンバ変数 ]
	//---------------------------------------------
protected:
	VECTOR3   m_pos;						// 位置
	VECTOR3   m_rot;						// 回転角
	VECTOR3   m_size;						// サイズ( 直径 )
	COLOR_F32 m_col;						// 色
	CTexture* m_pTexture;					// テクスチャへのポインタ
};

//==============================================================================
// プロトタイプ宣言
//==============================================================================

