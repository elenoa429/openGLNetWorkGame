//==============================================================================
// タイトル     :   3D当たり判定基底クラス
// ファイル名   :   collider3D.h
// 作成者       :   AT13B284 21 数藤凌哉
// 作成日       :   2016/11/29
//==============================================================================

//==============================================================================
// 更新履歴: -2016/11/29 数藤凌哉
//           ・制作開始
//==============================================================================

//==============================================================================
// インクルードガード
//==============================================================================
#pragma once

//==============================================================================
// インクルードファイル
//==============================================================================
#include "commonUtility.h"

//==============================================================================
// ライブラリへのリンク設定
//==============================================================================

//==============================================================================
// マクロ定義
//==============================================================================
#define COLLIDER_DEBUG_MODE		( true )	// 当たり判定デバッグ処理の判定用

//==============================================================================
// 構造体宣言
//==============================================================================

//==============================================================================
// 前方宣言
//==============================================================================
class CCollider3DSphere;

//==============================================================================
// クラス宣言
//==============================================================================
class CCollider3D
{
	//---------------------------------------------
	// [ 定数系 ]
	//---------------------------------------------
public:
	enum COLLIDER_PRIMITIVE
	{								/* ==当たり判定対象の形状( ダブルディスパッチに切り替えるので、おそらく使わないかも )== */
		COLLIDER_POINT = 0,				// 点
		COLLIDER_LINE,					// 直線
		COLLIDER_SEGMENT,				// 線分
		COLLIDER_PLANE,					// 平面
		COLLIDER_SPHERE,				// 球
		COLLIDER_BOX_AABB,				// AABB( 軸並行境界ボックス )
		COLLIDER_BOX_OBB,				// OBB( 有向境界ボックス )
		COLLIDER_CAPSULE,				// カプセル
		COLLIDER_MESH,					// メッシュ状ポリゴン
	};

	//---------------------------------------------
	// [ メンバ関数 ]
	//---------------------------------------------
public:
	CCollider3D();
	~CCollider3D();

	void Release();
	virtual void Uninit();
	virtual void Draw();

	virtual bool Collide( CCollider3D& collider ) = 0;
	virtual bool Collide( CCollider3DSphere& sphere ) = 0;

	virtual VECTOR3 GetDent( CCollider3D& collider , float rate = 1.0f ) = 0;
	virtual VECTOR3 GetDent( CCollider3DSphere& sphere , float rate ) = 0;

	void SetEnable( bool flags ){ m_isEneble = flags; }
	void SetPos( VECTOR3& pos ){ m_pos = pos; }

	bool GetEnable(){ return m_isEneble; }
	VECTOR3 GetPos(){ return m_pos; }

	static void SetDebugDrawFlag( bool flags ){ m_isDebugDraw = flags; }
	static bool GetDebugDrawFlag(){ return m_isDebugDraw; }

protected:
	bool Init( char* modelFilePath );
	void SetHitEffect( bool isHit );

	//---------------------------------------------
	// [ メンバ変数 ]
	//---------------------------------------------
protected:
	bool m_isEneble;					// 有効化フラグ
	VECTOR3 m_pos;						// 基準位置

	//CModel* m_pDebugModel;				// 当たり判定用モデル描画処理へのポインタ
	static bool m_isDebugDraw;			// デバッグ表示フラグ
};

//==============================================================================
// プロトタイプ宣言
//==============================================================================
